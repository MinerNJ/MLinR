master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
train_data$Embarked <- as.numeric(train_data$Embarked)
train_data <-train_data[-c(1, 4, 7:11)]
test_data <- test_data[-c(1, 3, 8:11)]
lm_model <- lm(Survived ~ ., data = train_data)
summary(lm_model)
dt_model <- rpart(as.factor(Survived) ~ ., data = train_data)
rpart.plot(dt_model)
train_preds <- predict(dt_model, train_data, type = 'c')
cm <- confusionMatrix(train_preds,as.factor(train_data$Survived))
cm
#or
dt_accuracy <- sum(diag(table(train_preds, train_data$Survived))) / sum(table(train_preds, train_data$Survived))
dt_accuracy
test_preds <- predict(dt_model, test_data, type = 'c')
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rpart)
library(rpart.plot)
library(xgboost)
set.seed(0351)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
mr_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mr.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "male"){
mr_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mr_age))
mrs_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mrs.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
mrs_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mrs_age))
miss_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Miss", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
miss_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(miss_age))
master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
train_data <-train_data[-c(1, 4, 7:11)]
test_data <- test_data[-c(1, 3, 8:11)]
lm_model <- lm(Survived ~ ., data = train_data)
summary(lm_model)
dt_model <- rpart(as.factor(Survived) ~ ., data = train_data)
rpart.plot(dt_model)
train_preds <- predict(dt_model, train_data, type = 'c')
cm <- confusionMatrix(train_preds,as.factor(train_data$Survived))
cm
#or
dt_accuracy <- sum(diag(table(train_preds, train_data$Survived))) / sum(table(train_preds, train_data$Survived))
dt_accuracy
train_preds <- predict(dt_model, train_data, type = 'c')
cm <- confusionMatrix(train_preds,as.factor(train_data$Survived))
cm
#or
dt_accuracy <- sum(diag(table(train_preds, train_data$Survived))) / sum(table(train_preds, train_data$Survived))
dt_accuracy
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rpart)
library(rpart.plot)
library(xgboost)
set.seed(0351)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
mr_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mr.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "male"){
mr_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mr_age))
mrs_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mrs.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
mrs_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mrs_age))
miss_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Miss", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
miss_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(miss_age))
master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
train_data$Embarked <- as.numeric(train_data$Embarked)
train_data$Status <- train_data$Pclass + train_data$Embarked
View(train_data)
train_data <-train_data[-c(1, 4, 7:12)]
test_data <- test_data[-c(1, 3, 8:11)]
View(train_data)
lm_model <- lm(Survived ~ ., data = train_data)
summary(lm_model)
dt_model <- rpart(as.factor(Survived) ~ ., data = train_data)
rpart.plot(dt_model)
train_preds <- predict(dt_model, train_data, type = 'c')
cm <- confusionMatrix(train_preds,as.factor(train_data$Survived))
cm
#or
dt_accuracy <- sum(diag(table(train_preds, train_data$Survived))) / sum(table(train_preds, train_data$Survived))
dt_accuracy
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rpart)
library(rpart.plot)
library(xgboost)
set.seed(0351)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
mr_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mr.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "male"){
mr_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mr_age))
mrs_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mrs.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
mrs_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mrs_age))
miss_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Miss", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
miss_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(miss_age))
master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
train_data <-train_data[-c(1, 4, 7:12)]
test_data <- test_data[-c(1, 3, 8:11)]
lm_model <- lm(Survived ~ ., data = train_data)
summary(lm_model)
dt_model <- rpart(as.factor(Survived) ~ ., data = train_data)
rpart.plot(dt_model)
train_preds <- predict(dt_model, train_data, type = 'c')
cm <- confusionMatrix(train_preds,as.factor(train_data$Survived))
cm
#or
dt_accuracy <- sum(diag(table(train_preds, train_data$Survived))) / sum(table(train_preds, train_data$Survived))
dt_accuracy
test_preds <- predict(dt_model, test_data, type = 'c')
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rpart)
library(rpart.plot)
library(xgboost)
set.seed(0351)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
mr_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mr.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "male"){
mr_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mr_age))
mrs_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mrs.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
mrs_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mrs_age))
miss_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Miss", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
miss_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(miss_age))
master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
View(test_data)
train_data <-train_data[-c(1, 4, 7:12)]
test_data <- test_data[-c(1, 3, 8:11)]
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rpart)
library(rpart.plot)
library(xgboost)
set.seed(0351)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
mr_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mr.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "male"){
mr_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mr_age))
mrs_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mrs.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
mrs_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mrs_age))
miss_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Miss", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
miss_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(miss_age))
master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
test_data$NFamily <- test_data$SibSp + test_data$Parch
train_data <-train_data[-c(1, 4, 7:12)]
test_data <- test_data[-c(1, 3, 8:11)]
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rpart)
library(rpart.plot)
library(xgboost)
set.seed(0351)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
mr_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mr.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "male"){
mr_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mr_age))
mrs_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Mrs.", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
mrs_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(mrs_age))
miss_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Miss", train_data$Name[i])) == TRUE) & train_data$Sex[i] == "female"){
miss_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(miss_age))
master_age <- c()
for(i in 1:length(train_data$Age)){
if(((grepl("Master", train_data$Name[i])) == TRUE) & (train_data$Sex[i] == "male")){
master_age[[i]] <- train_data$Age[i]
}
}
mean(na.omit(master_age))
for (i in 1:length(train_data$Age)) {
if((grepl("mrs.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "female"){
train_data$Age[i] <- mean(na.omit(mrs_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("mr.", tolower(train_data$Name[i]))) & is.na(train_data$Age[i]) & train_data$Sex[i] == "male"){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("miss", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(miss_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("master", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(master_age))
}
}
for (i in 1:length(train_data$Age)) {
if((grepl("dr", tolower(train_data$Name[i]))) & is.na(train_data$Age[i])){
train_data$Age[i] <- mean(na.omit(mr_age))
}
}
train_data$NFamily <- train_data$SibSp + train_data$Parch
test_data$NFamily <- test_data$SibSp + test_data$Parch
train_data <-train_data[-c(1, 4, 7:12)]
test_data <- test_data[-c(1, 3, 6:11)]
lm_model <- lm(Survived ~ ., data = train_data)
summary(lm_model)
dt_model <- rpart(as.factor(Survived) ~ ., data = train_data)
rpart.plot(dt_model)
train_preds <- predict(dt_model, train_data, type = 'c')
cm <- confusionMatrix(train_preds,as.factor(train_data$Survived))
cm
#or
dt_accuracy <- sum(diag(table(train_preds, train_data$Survived))) / sum(table(train_preds, train_data$Survived))
dt_accuracy
test_preds <- predict(dt_model, test_data, type = 'c')
View(test_preds)
train_data <- read.csv('train.csv')
test_data <- read.csv('test.csv')
View(train_preds)
fake_data <- rbind(test_data$PassengerId, test_preds)
View(fake_data)
fake_data <- cbind(test_data$PassengerId, test_preds)
fake_data$test_preds <- as.numeric(fake_data$test_preds)
View(test_preds)
fake_data <- cbind(test_data$PassengerId, test_preds, factor.exclude = TRUE)
View(fake_data)
fake_data <- cbind((test_data$PassengerId, test_preds), deparse.level = 1, factor.exclude = TRUE)
fake_data <- cbind(test_data$PassengerId, test_preds)
fake_data <- cbind.data.frame(test_data$PassengerId, test_preds)
titanic_submission <- fake_data
View(titanic_submission)
titanic_submission$`test_data$PassengerId` <- titanic_submission$PassengerId
View(titanic_submission)
titanic_submission <- fake_data
names(titanic_submission)[names(titanic_submission)=="test_data$PassengerId"] <- "PassengerId"
names(titanic_submission)[names(titanic_submission)=="test_preds"] <- "Survived"
write.csv(titanic_submission)
setwd("C:/Users/nickm/MLinR/Kaggle/Titanic")
write.csv(titanic_submission)
write.csv(titanic_submission, "titanic_submission.csv")
write.csv(titanic_submission, "titanic_submission.csv", row.names = F)
